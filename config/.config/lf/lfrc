# Basic vars
set shell sh
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id
set dircounts true
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set info size

set hiddenfiles ".*:*.log:*.aux:*.bbl:*.bcf:*.synctex.gz:
                 :*.blg:*.run.xml:*.fdb_latexmk:*.fls:*.cls:*.sty:*.out:
                 :*~:*.tmp:*.toc:*.nav:*.bak:*.snm:*.hi:*.o"

set cursorpreviewfmt "\033[7m"
# cmds/functions
cmd open ${{
    case $(file --mime-type $f -b) in
    	text/troff) man ./ $f;;
        text/*) $EDITOR $fx;;
	image/x-xcf|image/svg+xml) setsid gimp $f >/dev/null 2>&1 & ;;
	image/*) rotdir $f | setsid sxiv -aio 2>/dev/null | lf-select & ;;
	audio/*) mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f ;;
	video/*) setsid mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f -quiet >/dev/null 2>&1 & ;;
	application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
        *) $EDITOR $fx ;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd bulkrename ${{
    vidir
}}

cmd mkd ${{mkdir -p}}

# Setup zoxide
cmd z %{{
	result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd on-cd &{{
        zoxide add "$PWD"
}}

# Bindings
map g top
map D delete
map <delete> delete
map C copyto
map M moveto
map a push %mkdir<space>
map <insert> push %touch<space>

map r push :rename<space>

map R $lf -remote "send $id push :rename<space>$f"

map b bulkrename
map <c-r> reload
map <enter> shell
map <backspace2> set hidden!
map x $$f
map X !extract $f
map o &mimeopen "$f"
map O $mimeopen --ask "$f"
map z push :z<space>
